// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.3
// source: auth/proto/auth_migration.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AuthMigrationServiceClient is the client API for AuthMigrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuthMigrationServiceClient interface {
	// 搬移使用者資訊
	MigrationUserInfo(ctx context.Context, opts ...grpc.CallOption) (AuthMigrationService_MigrationUserInfoClient, error)
}

type authMigrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthMigrationServiceClient(cc grpc.ClientConnInterface) AuthMigrationServiceClient {
	return &authMigrationServiceClient{cc}
}

func (c *authMigrationServiceClient) MigrationUserInfo(ctx context.Context, opts ...grpc.CallOption) (AuthMigrationService_MigrationUserInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &AuthMigrationService_ServiceDesc.Streams[0], "/auth.AuthMigrationService/MigrationUserInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &authMigrationServiceMigrationUserInfoClient{stream}
	return x, nil
}

type AuthMigrationService_MigrationUserInfoClient interface {
	Send(*MigrationUserInfoRequest) error
	Recv() (*MigrationResponse, error)
	grpc.ClientStream
}

type authMigrationServiceMigrationUserInfoClient struct {
	grpc.ClientStream
}

func (x *authMigrationServiceMigrationUserInfoClient) Send(m *MigrationUserInfoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *authMigrationServiceMigrationUserInfoClient) Recv() (*MigrationResponse, error) {
	m := new(MigrationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AuthMigrationServiceServer is the server API for AuthMigrationService service.
// All implementations must embed UnimplementedAuthMigrationServiceServer
// for forward compatibility
type AuthMigrationServiceServer interface {
	// 搬移使用者資訊
	MigrationUserInfo(AuthMigrationService_MigrationUserInfoServer) error
	mustEmbedUnimplementedAuthMigrationServiceServer()
}

// UnimplementedAuthMigrationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAuthMigrationServiceServer struct {
}

func (UnimplementedAuthMigrationServiceServer) MigrationUserInfo(AuthMigrationService_MigrationUserInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method MigrationUserInfo not implemented")
}
func (UnimplementedAuthMigrationServiceServer) mustEmbedUnimplementedAuthMigrationServiceServer() {}

// UnsafeAuthMigrationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AuthMigrationServiceServer will
// result in compilation errors.
type UnsafeAuthMigrationServiceServer interface {
	mustEmbedUnimplementedAuthMigrationServiceServer()
}

func RegisterAuthMigrationServiceServer(s grpc.ServiceRegistrar, srv AuthMigrationServiceServer) {
	s.RegisterService(&AuthMigrationService_ServiceDesc, srv)
}

func _AuthMigrationService_MigrationUserInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AuthMigrationServiceServer).MigrationUserInfo(&authMigrationServiceMigrationUserInfoServer{stream})
}

type AuthMigrationService_MigrationUserInfoServer interface {
	Send(*MigrationResponse) error
	Recv() (*MigrationUserInfoRequest, error)
	grpc.ServerStream
}

type authMigrationServiceMigrationUserInfoServer struct {
	grpc.ServerStream
}

func (x *authMigrationServiceMigrationUserInfoServer) Send(m *MigrationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *authMigrationServiceMigrationUserInfoServer) Recv() (*MigrationUserInfoRequest, error) {
	m := new(MigrationUserInfoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AuthMigrationService_ServiceDesc is the grpc.ServiceDesc for AuthMigrationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AuthMigrationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthMigrationService",
	HandlerType: (*AuthMigrationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MigrationUserInfo",
			Handler:       _AuthMigrationService_MigrationUserInfo_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "auth/proto/auth_migration.proto",
}
