// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: scada-layout/proto/scada-layout.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFieldListRequest_RequestType int32

const (
	GetFieldListRequest_Tv    GetFieldListRequest_RequestType = 0
	GetFieldListRequest_Floor GetFieldListRequest_RequestType = 1
)

// Enum value maps for GetFieldListRequest_RequestType.
var (
	GetFieldListRequest_RequestType_name = map[int32]string{
		0: "Tv",
		1: "Floor",
	}
	GetFieldListRequest_RequestType_value = map[string]int32{
		"Tv":    0,
		"Floor": 1,
	}
)

func (x GetFieldListRequest_RequestType) Enum() *GetFieldListRequest_RequestType {
	p := new(GetFieldListRequest_RequestType)
	*p = x
	return p
}

func (x GetFieldListRequest_RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFieldListRequest_RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_scada_layout_proto_scada_layout_proto_enumTypes[0].Descriptor()
}

func (GetFieldListRequest_RequestType) Type() protoreflect.EnumType {
	return &file_scada_layout_proto_scada_layout_proto_enumTypes[0]
}

func (x GetFieldListRequest_RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFieldListRequest_RequestType.Descriptor instead.
func (GetFieldListRequest_RequestType) EnumDescriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{3, 0}
}

type GetReportResponse_DefaultChart_DisplayType int32

const (
	GetReportResponse_DefaultChart_accumulation GetReportResponse_DefaultChart_DisplayType = 0
	GetReportResponse_DefaultChart_realtime     GetReportResponse_DefaultChart_DisplayType = 1
	GetReportResponse_DefaultChart_state        GetReportResponse_DefaultChart_DisplayType = 2
)

// Enum value maps for GetReportResponse_DefaultChart_DisplayType.
var (
	GetReportResponse_DefaultChart_DisplayType_name = map[int32]string{
		0: "accumulation",
		1: "realtime",
		2: "state",
	}
	GetReportResponse_DefaultChart_DisplayType_value = map[string]int32{
		"accumulation": 0,
		"realtime":     1,
		"state":        2,
	}
)

func (x GetReportResponse_DefaultChart_DisplayType) Enum() *GetReportResponse_DefaultChart_DisplayType {
	p := new(GetReportResponse_DefaultChart_DisplayType)
	*p = x
	return p
}

func (x GetReportResponse_DefaultChart_DisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetReportResponse_DefaultChart_DisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_scada_layout_proto_scada_layout_proto_enumTypes[1].Descriptor()
}

func (GetReportResponse_DefaultChart_DisplayType) Type() protoreflect.EnumType {
	return &file_scada_layout_proto_scada_layout_proto_enumTypes[1]
}

func (x GetReportResponse_DefaultChart_DisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetReportResponse_DefaultChart_DisplayType.Descriptor instead.
func (GetReportResponse_DefaultChart_DisplayType) EnumDescriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 4, 0}
}

type FieldList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *FieldList) Reset() {
	*x = FieldList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldList) ProtoMessage() {}

func (x *FieldList) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldList.ProtoReflect.Descriptor instead.
func (*FieldList) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{0}
}

func (x *FieldList) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetFieldsTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldTags []*GetFieldsTagsResponse_FieldTag `protobuf:"bytes,1,rep,name=fieldTags,proto3" json:"fieldTags,omitempty"`
}

func (x *GetFieldsTagsResponse) Reset() {
	*x = GetFieldsTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldsTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldsTagsResponse) ProtoMessage() {}

func (x *GetFieldsTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldsTagsResponse.ProtoReflect.Descriptor instead.
func (*GetFieldsTagsResponse) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{1}
}

func (x *GetFieldsTagsResponse) GetFieldTags() []*GetFieldsTagsResponse_FieldTag {
	if x != nil {
		return x.FieldTags
	}
	return nil
}

type GetReportFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string                           `protobuf:"bytes,1,opt,name=projectName,proto3" json:"projectName,omitempty"`
	Fields      []*GetReportFieldsResponse_Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetReportFieldsResponse) Reset() {
	*x = GetReportFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportFieldsResponse) ProtoMessage() {}

func (x *GetReportFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportFieldsResponse.ProtoReflect.Descriptor instead.
func (*GetReportFieldsResponse) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{2}
}

func (x *GetReportFieldsResponse) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetReportFieldsResponse) GetFields() []*GetReportFieldsResponse_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetFieldListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type GetFieldListRequest_RequestType `protobuf:"varint,2,opt,name=type,proto3,enum=scada_layout.GetFieldListRequest_RequestType" json:"type,omitempty"`
}

func (x *GetFieldListRequest) Reset() {
	*x = GetFieldListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldListRequest) ProtoMessage() {}

func (x *GetFieldListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldListRequest.ProtoReflect.Descriptor instead.
func (*GetFieldListRequest) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{3}
}

func (x *GetFieldListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFieldListRequest) GetType() GetFieldListRequest_RequestType {
	if x != nil {
		return x.Type
	}
	return GetFieldListRequest_Tv
}

type GetFieldListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetFieldListResponse) Reset() {
	*x = GetFieldListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldListResponse) ProtoMessage() {}

func (x *GetFieldListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldListResponse.ProtoReflect.Descriptor instead.
func (*GetFieldListResponse) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{4}
}

func (x *GetFieldListResponse) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetSmartDefrostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*GetSmartDefrostResponse_GroupDetail `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetSmartDefrostResponse) Reset() {
	*x = GetSmartDefrostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartDefrostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartDefrostResponse) ProtoMessage() {}

func (x *GetSmartDefrostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartDefrostResponse.ProtoReflect.Descriptor instead.
func (*GetSmartDefrostResponse) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{5}
}

func (x *GetSmartDefrostResponse) GetGroups() []*GetSmartDefrostResponse_GroupDetail {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfSetting         *GetReportResponse_ReportSettingDetail `protobuf:"bytes,1,opt,name=pdf_setting,json=pdfSetting,proto3" json:"pdf_setting,omitempty"`
	ExcelSetting       *GetReportResponse_ReportSettingDetail `protobuf:"bytes,2,opt,name=excel_setting,json=excelSetting,proto3" json:"excel_setting,omitempty"`
	PdfInput           *GetReportResponse_PdfInputDetail      `protobuf:"bytes,3,opt,name=pdf_input,json=pdfInput,proto3" json:"pdf_input,omitempty"`
	ExcelInput         *GetReportResponse_ExcelIntervalDetail `protobuf:"bytes,4,opt,name=excel_input,json=excelInput,proto3" json:"excel_input,omitempty"`
	ShowCompanyLogo    bool                                   `protobuf:"varint,5,opt,name=show_company_logo,json=showCompanyLogo,proto3" json:"show_company_logo,omitempty"`
	SelectFields_Limit uint32                                 `protobuf:"varint,6,opt,name=select_fields_Limit,json=selectFieldsLimit,proto3" json:"select_fields_Limit,omitempty"`
	DefaultCharts      []*GetReportResponse_DefaultChart      `protobuf:"bytes,7,rep,name=default_charts,json=defaultCharts,proto3" json:"default_charts,omitempty"`
	Project_Name       string                                 `protobuf:"bytes,8,opt,name=Project_Name,json=ProjectName,proto3" json:"Project_Name,omitempty"`
}

func (x *GetReportResponse) Reset() {
	*x = GetReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse) ProtoMessage() {}

func (x *GetReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse.ProtoReflect.Descriptor instead.
func (*GetReportResponse) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6}
}

func (x *GetReportResponse) GetPdfSetting() *GetReportResponse_ReportSettingDetail {
	if x != nil {
		return x.PdfSetting
	}
	return nil
}

func (x *GetReportResponse) GetExcelSetting() *GetReportResponse_ReportSettingDetail {
	if x != nil {
		return x.ExcelSetting
	}
	return nil
}

func (x *GetReportResponse) GetPdfInput() *GetReportResponse_PdfInputDetail {
	if x != nil {
		return x.PdfInput
	}
	return nil
}

func (x *GetReportResponse) GetExcelInput() *GetReportResponse_ExcelIntervalDetail {
	if x != nil {
		return x.ExcelInput
	}
	return nil
}

func (x *GetReportResponse) GetShowCompanyLogo() bool {
	if x != nil {
		return x.ShowCompanyLogo
	}
	return false
}

func (x *GetReportResponse) GetSelectFields_Limit() uint32 {
	if x != nil {
		return x.SelectFields_Limit
	}
	return 0
}

func (x *GetReportResponse) GetDefaultCharts() []*GetReportResponse_DefaultChart {
	if x != nil {
		return x.DefaultCharts
	}
	return nil
}

func (x *GetReportResponse) GetProject_Name() string {
	if x != nil {
		return x.Project_Name
	}
	return ""
}

type GetFieldsTagsResponse_FieldTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      string                              `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Equipments []*GetFieldsTagsResponse_IdWithName `protobuf:"bytes,2,rep,name=equipments,proto3" json:"equipments,omitempty"`
	Groups     []*GetFieldsTagsResponse_IdWithName `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Floors     []*GetFieldsTagsResponse_IdWithName `protobuf:"bytes,4,rep,name=floors,proto3" json:"floors,omitempty"`
	Unit       string                              `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	SensorType string                              `protobuf:"bytes,6,opt,name=sensorType,proto3" json:"sensorType,omitempty"`
	Name       string                              `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetFieldsTagsResponse_FieldTag) Reset() {
	*x = GetFieldsTagsResponse_FieldTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldsTagsResponse_FieldTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldsTagsResponse_FieldTag) ProtoMessage() {}

func (x *GetFieldsTagsResponse_FieldTag) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldsTagsResponse_FieldTag.ProtoReflect.Descriptor instead.
func (*GetFieldsTagsResponse_FieldTag) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetFieldsTagsResponse_FieldTag) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GetFieldsTagsResponse_FieldTag) GetEquipments() []*GetFieldsTagsResponse_IdWithName {
	if x != nil {
		return x.Equipments
	}
	return nil
}

func (x *GetFieldsTagsResponse_FieldTag) GetGroups() []*GetFieldsTagsResponse_IdWithName {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetFieldsTagsResponse_FieldTag) GetFloors() []*GetFieldsTagsResponse_IdWithName {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *GetFieldsTagsResponse_FieldTag) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *GetFieldsTagsResponse_FieldTag) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *GetFieldsTagsResponse_FieldTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetFieldsTagsResponse_IdWithName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetFieldsTagsResponse_IdWithName) Reset() {
	*x = GetFieldsTagsResponse_IdWithName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldsTagsResponse_IdWithName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldsTagsResponse_IdWithName) ProtoMessage() {}

func (x *GetFieldsTagsResponse_IdWithName) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldsTagsResponse_IdWithName.ProtoReflect.Descriptor instead.
func (*GetFieldsTagsResponse_IdWithName) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetFieldsTagsResponse_IdWithName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFieldsTagsResponse_IdWithName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetReportFieldsResponse_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field       string           `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Equipments  []string         `protobuf:"bytes,2,rep,name=equipments,proto3" json:"equipments,omitempty"`
	Groups      []string         `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Floors      []string         `protobuf:"bytes,4,rep,name=floors,proto3" json:"floors,omitempty"`
	Unit        string           `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	SensorType  string           `protobuf:"bytes,6,opt,name=sensorType,proto3" json:"sensorType,omitempty"`
	Name        string           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	DisplayType string           `protobuf:"bytes,8,opt,name=displayType,proto3" json:"displayType,omitempty"`
	DisplayDp   uint32           `protobuf:"varint,9,opt,name=displayDp,proto3" json:"displayDp,omitempty"`
	Trans       map[int32]string `protobuf:"bytes,10,rep,name=trans,proto3" json:"trans,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetReportFieldsResponse_Field) Reset() {
	*x = GetReportFieldsResponse_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportFieldsResponse_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportFieldsResponse_Field) ProtoMessage() {}

func (x *GetReportFieldsResponse_Field) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportFieldsResponse_Field.ProtoReflect.Descriptor instead.
func (*GetReportFieldsResponse_Field) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GetReportFieldsResponse_Field) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GetReportFieldsResponse_Field) GetEquipments() []string {
	if x != nil {
		return x.Equipments
	}
	return nil
}

func (x *GetReportFieldsResponse_Field) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetReportFieldsResponse_Field) GetFloors() []string {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *GetReportFieldsResponse_Field) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *GetReportFieldsResponse_Field) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *GetReportFieldsResponse_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetReportFieldsResponse_Field) GetDisplayType() string {
	if x != nil {
		return x.DisplayType
	}
	return ""
}

func (x *GetReportFieldsResponse_Field) GetDisplayDp() uint32 {
	if x != nil {
		return x.DisplayDp
	}
	return 0
}

func (x *GetReportFieldsResponse_Field) GetTrans() map[int32]string {
	if x != nil {
		return x.Trans
	}
	return nil
}

type GetSmartDefrostResponse_GroupDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Elements []*GetSmartDefrostResponse_ElementDetail `protobuf:"bytes,3,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *GetSmartDefrostResponse_GroupDetail) Reset() {
	*x = GetSmartDefrostResponse_GroupDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartDefrostResponse_GroupDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartDefrostResponse_GroupDetail) ProtoMessage() {}

func (x *GetSmartDefrostResponse_GroupDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartDefrostResponse_GroupDetail.ProtoReflect.Descriptor instead.
func (*GetSmartDefrostResponse_GroupDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetSmartDefrostResponse_GroupDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSmartDefrostResponse_GroupDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSmartDefrostResponse_GroupDetail) GetElements() []*GetSmartDefrostResponse_ElementDetail {
	if x != nil {
		return x.Elements
	}
	return nil
}

type GetSmartDefrostResponse_ElementDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Fields *GetSmartDefrostResponse_ServerSettingField `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetSmartDefrostResponse_ElementDetail) Reset() {
	*x = GetSmartDefrostResponse_ElementDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartDefrostResponse_ElementDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartDefrostResponse_ElementDetail) ProtoMessage() {}

func (x *GetSmartDefrostResponse_ElementDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartDefrostResponse_ElementDetail.ProtoReflect.Descriptor instead.
func (*GetSmartDefrostResponse_ElementDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{5, 1}
}

func (x *GetSmartDefrostResponse_ElementDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSmartDefrostResponse_ElementDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSmartDefrostResponse_ElementDetail) GetFields() *GetSmartDefrostResponse_ServerSettingField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetSmartDefrostResponse_ServerSettingField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State              string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Execute            string `protobuf:"bytes,2,opt,name=execute,proto3" json:"execute,omitempty"`
	ProcessID          string `protobuf:"bytes,3,opt,name=processID,proto3" json:"processID,omitempty"`
	Waiting            string `protobuf:"bytes,4,opt,name=waiting,proto3" json:"waiting,omitempty"`
	DefDelayTime       string `protobuf:"bytes,5,opt,name=def_delay_time,json=defDelayTime,proto3" json:"def_delay_time,omitempty"`
	DefTime            string `protobuf:"bytes,6,opt,name=def_time,json=defTime,proto3" json:"def_time,omitempty"`
	DefDripTime        string `protobuf:"bytes,7,opt,name=def_drip_time,json=defDripTime,proto3" json:"def_drip_time,omitempty"`
	DefDelayRemainTime string `protobuf:"bytes,8,opt,name=def_delay_remain_time,json=defDelayRemainTime,proto3" json:"def_delay_remain_time,omitempty"`
	DefRemainTime      string `protobuf:"bytes,9,opt,name=def_remain_time,json=defRemainTime,proto3" json:"def_remain_time,omitempty"`
	DefDripRemainTime  string `protobuf:"bytes,10,opt,name=def_drip_remain_time,json=defDripRemainTime,proto3" json:"def_drip_remain_time,omitempty"`
	DefMode            string `protobuf:"bytes,11,opt,name=def_mode,json=defMode,proto3" json:"def_mode,omitempty"`
	DefStopMode        string `protobuf:"bytes,12,opt,name=def_stop_mode,json=defStopMode,proto3" json:"def_stop_mode,omitempty"`
	IoStatus           string `protobuf:"bytes,13,opt,name=io_status,json=ioStatus,proto3" json:"io_status,omitempty"`
	AiStatus           string `protobuf:"bytes,14,opt,name=ai_status,json=aiStatus,proto3" json:"ai_status,omitempty"`
	AoStatus           string `protobuf:"bytes,15,opt,name=ao_status,json=aoStatus,proto3" json:"ao_status,omitempty"`
	DiStatus           string `protobuf:"bytes,16,opt,name=di_status,json=diStatus,proto3" json:"di_status,omitempty"`
	DoStatus           string `protobuf:"bytes,17,opt,name=do_status,json=doStatus,proto3" json:"do_status,omitempty"`
	ForcedDef          string `protobuf:"bytes,18,opt,name=forced_def,json=forcedDef,proto3" json:"forced_def,omitempty"`
	ErrCode            string `protobuf:"bytes,19,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrCode1           string `protobuf:"bytes,20,opt,name=err_code1,json=errCode1,proto3" json:"err_code1,omitempty"`
}

func (x *GetSmartDefrostResponse_ServerSettingField) Reset() {
	*x = GetSmartDefrostResponse_ServerSettingField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartDefrostResponse_ServerSettingField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartDefrostResponse_ServerSettingField) ProtoMessage() {}

func (x *GetSmartDefrostResponse_ServerSettingField) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartDefrostResponse_ServerSettingField.ProtoReflect.Descriptor instead.
func (*GetSmartDefrostResponse_ServerSettingField) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{5, 2}
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetExecute() string {
	if x != nil {
		return x.Execute
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetProcessID() string {
	if x != nil {
		return x.ProcessID
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetWaiting() string {
	if x != nil {
		return x.Waiting
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefDelayTime() string {
	if x != nil {
		return x.DefDelayTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefTime() string {
	if x != nil {
		return x.DefTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefDripTime() string {
	if x != nil {
		return x.DefDripTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefDelayRemainTime() string {
	if x != nil {
		return x.DefDelayRemainTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefRemainTime() string {
	if x != nil {
		return x.DefRemainTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefDripRemainTime() string {
	if x != nil {
		return x.DefDripRemainTime
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefMode() string {
	if x != nil {
		return x.DefMode
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDefStopMode() string {
	if x != nil {
		return x.DefStopMode
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetIoStatus() string {
	if x != nil {
		return x.IoStatus
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetAiStatus() string {
	if x != nil {
		return x.AiStatus
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetAoStatus() string {
	if x != nil {
		return x.AoStatus
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDiStatus() string {
	if x != nil {
		return x.DiStatus
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetDoStatus() string {
	if x != nil {
		return x.DoStatus
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetForcedDef() string {
	if x != nil {
		return x.ForcedDef
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *GetSmartDefrostResponse_ServerSettingField) GetErrCode1() string {
	if x != nil {
		return x.ErrCode1
	}
	return ""
}

type GetReportResponse_ReportSettingDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable   bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Print    bool `protobuf:"varint,2,opt,name=print,proto3" json:"print,omitempty"`
	Cron     bool `protobuf:"varint,3,opt,name=cron,proto3" json:"cron,omitempty"`
	Download bool `protobuf:"varint,4,opt,name=download,proto3" json:"download,omitempty"`
}

func (x *GetReportResponse_ReportSettingDetail) Reset() {
	*x = GetReportResponse_ReportSettingDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_ReportSettingDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_ReportSettingDetail) ProtoMessage() {}

func (x *GetReportResponse_ReportSettingDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_ReportSettingDetail.ProtoReflect.Descriptor instead.
func (*GetReportResponse_ReportSettingDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetReportResponse_ReportSettingDetail) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *GetReportResponse_ReportSettingDetail) GetPrint() bool {
	if x != nil {
		return x.Print
	}
	return false
}

func (x *GetReportResponse_ReportSettingDetail) GetCron() bool {
	if x != nil {
		return x.Cron
	}
	return false
}

func (x *GetReportResponse_ReportSettingDetail) GetDownload() bool {
	if x != nil {
		return x.Download
	}
	return false
}

type GetReportResponse_PdfInputDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval   []*GetReportResponse_IntervalDetail `protobuf:"bytes,1,rep,name=interval,proto3" json:"interval,omitempty"`
	Info       []string                            `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty"`
	DetailInfo []string                            `protobuf:"bytes,3,rep,name=detail_info,json=detailInfo,proto3" json:"detail_info,omitempty"`
}

func (x *GetReportResponse_PdfInputDetail) Reset() {
	*x = GetReportResponse_PdfInputDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_PdfInputDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_PdfInputDetail) ProtoMessage() {}

func (x *GetReportResponse_PdfInputDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_PdfInputDetail.ProtoReflect.Descriptor instead.
func (*GetReportResponse_PdfInputDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GetReportResponse_PdfInputDetail) GetInterval() []*GetReportResponse_IntervalDetail {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *GetReportResponse_PdfInputDetail) GetInfo() []string {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetReportResponse_PdfInputDetail) GetDetailInfo() []string {
	if x != nil {
		return x.DetailInfo
	}
	return nil
}

type GetReportResponse_ExcelIntervalDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval     []*GetReportResponse_IntervalDetail `protobuf:"bytes,1,rep,name=interval,proto3" json:"interval,omitempty"`
	DataInterval []*GetReportResponse_IntervalDetail `protobuf:"bytes,2,rep,name=data_interval,json=dataInterval,proto3" json:"data_interval,omitempty"`
}

func (x *GetReportResponse_ExcelIntervalDetail) Reset() {
	*x = GetReportResponse_ExcelIntervalDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_ExcelIntervalDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_ExcelIntervalDetail) ProtoMessage() {}

func (x *GetReportResponse_ExcelIntervalDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_ExcelIntervalDetail.ProtoReflect.Descriptor instead.
func (*GetReportResponse_ExcelIntervalDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 2}
}

func (x *GetReportResponse_ExcelIntervalDetail) GetInterval() []*GetReportResponse_IntervalDetail {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *GetReportResponse_ExcelIntervalDetail) GetDataInterval() []*GetReportResponse_IntervalDetail {
	if x != nil {
		return x.DataInterval
	}
	return nil
}

type GetReportResponse_IntervalDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Enable bool   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *GetReportResponse_IntervalDetail) Reset() {
	*x = GetReportResponse_IntervalDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_IntervalDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_IntervalDetail) ProtoMessage() {}

func (x *GetReportResponse_IntervalDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_IntervalDetail.ProtoReflect.Descriptor instead.
func (*GetReportResponse_IntervalDetail) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 3}
}

func (x *GetReportResponse_IntervalDetail) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetReportResponse_IntervalDetail) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *GetReportResponse_IntervalDetail) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GetReportResponse_DefaultChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChartFields []*GetReportResponse_DefaultChart_ChartField `protobuf:"bytes,2,rep,name=chart_fields,json=chartFields,proto3" json:"chart_fields,omitempty"`
}

func (x *GetReportResponse_DefaultChart) Reset() {
	*x = GetReportResponse_DefaultChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_DefaultChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_DefaultChart) ProtoMessage() {}

func (x *GetReportResponse_DefaultChart) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_DefaultChart.ProtoReflect.Descriptor instead.
func (*GetReportResponse_DefaultChart) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 4}
}

func (x *GetReportResponse_DefaultChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetReportResponse_DefaultChart) GetChartFields() []*GetReportResponse_DefaultChart_ChartField {
	if x != nil {
		return x.ChartFields
	}
	return nil
}

type GetReportResponse_DefaultChart_ChartField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field        string            `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Equip        string            `protobuf:"bytes,3,opt,name=equip,proto3" json:"equip,omitempty"`
	Group        string            `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Type         string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Unit         string            `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
	DisplayDp    uint32            `protobuf:"varint,7,opt,name=display_dp,json=displayDp,proto3" json:"display_dp,omitempty"`
	Trans        map[uint64]string `protobuf:"bytes,8,rep,name=trans,proto3" json:"trans,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsSquareWave bool              `protobuf:"varint,9,opt,name=is_square_wave,json=isSquareWave,proto3" json:"is_square_wave,omitempty"`
}

func (x *GetReportResponse_DefaultChart_ChartField) Reset() {
	*x = GetReportResponse_DefaultChart_ChartField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse_DefaultChart_ChartField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse_DefaultChart_ChartField) ProtoMessage() {}

func (x *GetReportResponse_DefaultChart_ChartField) ProtoReflect() protoreflect.Message {
	mi := &file_scada_layout_proto_scada_layout_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse_DefaultChart_ChartField.ProtoReflect.Descriptor instead.
func (*GetReportResponse_DefaultChart_ChartField) Descriptor() ([]byte, []int) {
	return file_scada_layout_proto_scada_layout_proto_rawDescGZIP(), []int{6, 4, 0}
}

func (x *GetReportResponse_DefaultChart_ChartField) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetEquip() string {
	if x != nil {
		return x.Equip
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *GetReportResponse_DefaultChart_ChartField) GetDisplayDp() uint32 {
	if x != nil {
		return x.DisplayDp
	}
	return 0
}

func (x *GetReportResponse_DefaultChart_ChartField) GetTrans() map[uint64]string {
	if x != nil {
		return x.Trans
	}
	return nil
}

func (x *GetReportResponse_DefaultChart_ChartField) GetIsSquareWave() bool {
	if x != nil {
		return x.IsSquareWave
	}
	return false
}

var File_scada_layout_proto_scada_layout_proto protoreflect.FileDescriptor

var file_scada_layout_proto_scada_layout_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x63, 0x61, 0x64, 0x61, 0x2d, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x61, 0x64, 0x61, 0x2d, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x61, 0x67, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x1a, 0xc8, 0x02,
	0x0a, 0x08, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x4e, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x46, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61,
	0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x30, 0x0a, 0x0a, 0x49, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x04, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61,
	0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xfd, 0x02,
	0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x44, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x44, 0x70, 0x12, 0x4c, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x76, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x88, 0x08, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x44, 0x65,
	0x66, 0x72, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x1a, 0x82, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x44,
	0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73,
	0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x94,
	0x05, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x5f, 0x64, 0x72, 0x69, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x44, 0x72, 0x69, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x66, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x66, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x64, 0x65, 0x66, 0x5f, 0x64, 0x72, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x44, 0x72, 0x69, 0x70, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x66,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x66, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x69,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6f, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x44, 0x65, 0x66, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x31, 0x22, 0xed, 0x0c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x70,
	0x64, 0x66, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x70, 0x64, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x58, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61,
	0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x65,
	0x78, 0x63, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x09, 0x70,
	0x64, 0x66, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x64, 0x66, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08,
	0x70, 0x64, 0x66, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x54, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x65,
	0x6c, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x78, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x53, 0x0a, 0x0e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x73, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x91, 0x01, 0x0a, 0x0e, 0x50, 0x64, 0x66, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xb6, 0x01, 0x0a, 0x13,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x4a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x53, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x1a, 0x4e, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x1a, 0x9e, 0x04, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xe3, 0x02, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44,
	0x70, 0x12, 0x58, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x76, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x57, 0x61, 0x76,
	0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a, 0x0b, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x10, 0x02, 0x32, 0xb2, 0x03, 0x0a, 0x12, 0x53, 0x63, 0x61, 0x64, 0x61, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x17, 0x2e,
	0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x17, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x61, 0x64,
	0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61,
	0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x67, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x61, 0x64,
	0x61, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x63, 0x61, 0x64, 0x61, 0x5f,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x73, 0x63,
	0x61, 0x64, 0x61, 0x2d, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scada_layout_proto_scada_layout_proto_rawDescOnce sync.Once
	file_scada_layout_proto_scada_layout_proto_rawDescData = file_scada_layout_proto_scada_layout_proto_rawDesc
)

func file_scada_layout_proto_scada_layout_proto_rawDescGZIP() []byte {
	file_scada_layout_proto_scada_layout_proto_rawDescOnce.Do(func() {
		file_scada_layout_proto_scada_layout_proto_rawDescData = protoimpl.X.CompressGZIP(file_scada_layout_proto_scada_layout_proto_rawDescData)
	})
	return file_scada_layout_proto_scada_layout_proto_rawDescData
}

var file_scada_layout_proto_scada_layout_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_scada_layout_proto_scada_layout_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_scada_layout_proto_scada_layout_proto_goTypes = []interface{}{
	(GetFieldListRequest_RequestType)(0),               // 0: scada_layout.GetFieldListRequest.RequestType
	(GetReportResponse_DefaultChart_DisplayType)(0),    // 1: scada_layout.GetReportResponse.DefaultChart.DisplayType
	(*FieldList)(nil),                                  // 2: scada_layout.FieldList
	(*GetFieldsTagsResponse)(nil),                      // 3: scada_layout.GetFieldsTagsResponse
	(*GetReportFieldsResponse)(nil),                    // 4: scada_layout.GetReportFieldsResponse
	(*GetFieldListRequest)(nil),                        // 5: scada_layout.GetFieldListRequest
	(*GetFieldListResponse)(nil),                       // 6: scada_layout.GetFieldListResponse
	(*GetSmartDefrostResponse)(nil),                    // 7: scada_layout.GetSmartDefrostResponse
	(*GetReportResponse)(nil),                          // 8: scada_layout.GetReportResponse
	(*GetFieldsTagsResponse_FieldTag)(nil),             // 9: scada_layout.GetFieldsTagsResponse.FieldTag
	(*GetFieldsTagsResponse_IdWithName)(nil),           // 10: scada_layout.GetFieldsTagsResponse.IdWithName
	(*GetReportFieldsResponse_Field)(nil),              // 11: scada_layout.GetReportFieldsResponse.Field
	nil,                                                // 12: scada_layout.GetReportFieldsResponse.Field.TransEntry
	(*GetSmartDefrostResponse_GroupDetail)(nil),        // 13: scada_layout.GetSmartDefrostResponse.GroupDetail
	(*GetSmartDefrostResponse_ElementDetail)(nil),      // 14: scada_layout.GetSmartDefrostResponse.ElementDetail
	(*GetSmartDefrostResponse_ServerSettingField)(nil), // 15: scada_layout.GetSmartDefrostResponse.ServerSettingField
	(*GetReportResponse_ReportSettingDetail)(nil),      // 16: scada_layout.GetReportResponse.ReportSettingDetail
	(*GetReportResponse_PdfInputDetail)(nil),           // 17: scada_layout.GetReportResponse.PdfInputDetail
	(*GetReportResponse_ExcelIntervalDetail)(nil),      // 18: scada_layout.GetReportResponse.ExcelIntervalDetail
	(*GetReportResponse_IntervalDetail)(nil),           // 19: scada_layout.GetReportResponse.IntervalDetail
	(*GetReportResponse_DefaultChart)(nil),             // 20: scada_layout.GetReportResponse.DefaultChart
	(*GetReportResponse_DefaultChart_ChartField)(nil),  // 21: scada_layout.GetReportResponse.DefaultChart.ChartField
	nil,                   // 22: scada_layout.GetReportResponse.DefaultChart.ChartField.TransEntry
	(*emptypb.Empty)(nil), // 23: google.protobuf.Empty
}
var file_scada_layout_proto_scada_layout_proto_depIdxs = []int32{
	9,  // 0: scada_layout.GetFieldsTagsResponse.fieldTags:type_name -> scada_layout.GetFieldsTagsResponse.FieldTag
	11, // 1: scada_layout.GetReportFieldsResponse.fields:type_name -> scada_layout.GetReportFieldsResponse.Field
	0,  // 2: scada_layout.GetFieldListRequest.type:type_name -> scada_layout.GetFieldListRequest.RequestType
	13, // 3: scada_layout.GetSmartDefrostResponse.groups:type_name -> scada_layout.GetSmartDefrostResponse.GroupDetail
	16, // 4: scada_layout.GetReportResponse.pdf_setting:type_name -> scada_layout.GetReportResponse.ReportSettingDetail
	16, // 5: scada_layout.GetReportResponse.excel_setting:type_name -> scada_layout.GetReportResponse.ReportSettingDetail
	17, // 6: scada_layout.GetReportResponse.pdf_input:type_name -> scada_layout.GetReportResponse.PdfInputDetail
	18, // 7: scada_layout.GetReportResponse.excel_input:type_name -> scada_layout.GetReportResponse.ExcelIntervalDetail
	20, // 8: scada_layout.GetReportResponse.default_charts:type_name -> scada_layout.GetReportResponse.DefaultChart
	10, // 9: scada_layout.GetFieldsTagsResponse.FieldTag.equipments:type_name -> scada_layout.GetFieldsTagsResponse.IdWithName
	10, // 10: scada_layout.GetFieldsTagsResponse.FieldTag.groups:type_name -> scada_layout.GetFieldsTagsResponse.IdWithName
	10, // 11: scada_layout.GetFieldsTagsResponse.FieldTag.floors:type_name -> scada_layout.GetFieldsTagsResponse.IdWithName
	12, // 12: scada_layout.GetReportFieldsResponse.Field.trans:type_name -> scada_layout.GetReportFieldsResponse.Field.TransEntry
	14, // 13: scada_layout.GetSmartDefrostResponse.GroupDetail.elements:type_name -> scada_layout.GetSmartDefrostResponse.ElementDetail
	15, // 14: scada_layout.GetSmartDefrostResponse.ElementDetail.fields:type_name -> scada_layout.GetSmartDefrostResponse.ServerSettingField
	19, // 15: scada_layout.GetReportResponse.PdfInputDetail.interval:type_name -> scada_layout.GetReportResponse.IntervalDetail
	19, // 16: scada_layout.GetReportResponse.ExcelIntervalDetail.interval:type_name -> scada_layout.GetReportResponse.IntervalDetail
	19, // 17: scada_layout.GetReportResponse.ExcelIntervalDetail.data_interval:type_name -> scada_layout.GetReportResponse.IntervalDetail
	21, // 18: scada_layout.GetReportResponse.DefaultChart.chart_fields:type_name -> scada_layout.GetReportResponse.DefaultChart.ChartField
	22, // 19: scada_layout.GetReportResponse.DefaultChart.ChartField.trans:type_name -> scada_layout.GetReportResponse.DefaultChart.ChartField.TransEntry
	2,  // 20: scada_layout.ScadaLayoutService.getFieldsTags:input_type -> scada_layout.FieldList
	2,  // 21: scada_layout.ScadaLayoutService.getReportFields:input_type -> scada_layout.FieldList
	5,  // 22: scada_layout.ScadaLayoutService.getFieldsWithId:input_type -> scada_layout.GetFieldListRequest
	23, // 23: scada_layout.ScadaLayoutService.getSmartDefrost:input_type -> google.protobuf.Empty
	23, // 24: scada_layout.ScadaLayoutService.getReport:input_type -> google.protobuf.Empty
	3,  // 25: scada_layout.ScadaLayoutService.getFieldsTags:output_type -> scada_layout.GetFieldsTagsResponse
	4,  // 26: scada_layout.ScadaLayoutService.getReportFields:output_type -> scada_layout.GetReportFieldsResponse
	6,  // 27: scada_layout.ScadaLayoutService.getFieldsWithId:output_type -> scada_layout.GetFieldListResponse
	7,  // 28: scada_layout.ScadaLayoutService.getSmartDefrost:output_type -> scada_layout.GetSmartDefrostResponse
	8,  // 29: scada_layout.ScadaLayoutService.getReport:output_type -> scada_layout.GetReportResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_scada_layout_proto_scada_layout_proto_init() }
func file_scada_layout_proto_scada_layout_proto_init() {
	if File_scada_layout_proto_scada_layout_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scada_layout_proto_scada_layout_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldsTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartDefrostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldsTagsResponse_FieldTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldsTagsResponse_IdWithName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportFieldsResponse_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartDefrostResponse_GroupDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartDefrostResponse_ElementDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartDefrostResponse_ServerSettingField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_ReportSettingDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_PdfInputDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_ExcelIntervalDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_IntervalDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_DefaultChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scada_layout_proto_scada_layout_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResponse_DefaultChart_ChartField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scada_layout_proto_scada_layout_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scada_layout_proto_scada_layout_proto_goTypes,
		DependencyIndexes: file_scada_layout_proto_scada_layout_proto_depIdxs,
		EnumInfos:         file_scada_layout_proto_scada_layout_proto_enumTypes,
		MessageInfos:      file_scada_layout_proto_scada_layout_proto_msgTypes,
	}.Build()
	File_scada_layout_proto_scada_layout_proto = out.File
	file_scada_layout_proto_scada_layout_proto_rawDesc = nil
	file_scada_layout_proto_scada_layout_proto_goTypes = nil
	file_scada_layout_proto_scada_layout_proto_depIdxs = nil
}
