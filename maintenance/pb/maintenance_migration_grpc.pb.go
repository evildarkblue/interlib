// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.3
// source: maintenance/proto/maintenance_migration.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MaintenanceMigrationServiceClient is the client API for MaintenanceMigrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MaintenanceMigrationServiceClient interface {
	// 搬移維護資訊
	MigrationMaintenance(ctx context.Context, opts ...grpc.CallOption) (MaintenanceMigrationService_MigrationMaintenanceClient, error)
}

type maintenanceMigrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMaintenanceMigrationServiceClient(cc grpc.ClientConnInterface) MaintenanceMigrationServiceClient {
	return &maintenanceMigrationServiceClient{cc}
}

func (c *maintenanceMigrationServiceClient) MigrationMaintenance(ctx context.Context, opts ...grpc.CallOption) (MaintenanceMigrationService_MigrationMaintenanceClient, error) {
	stream, err := c.cc.NewStream(ctx, &MaintenanceMigrationService_ServiceDesc.Streams[0], "/maintenance.MaintenanceMigrationService/MigrationMaintenance", opts...)
	if err != nil {
		return nil, err
	}
	x := &maintenanceMigrationServiceMigrationMaintenanceClient{stream}
	return x, nil
}

type MaintenanceMigrationService_MigrationMaintenanceClient interface {
	Send(*MigrationMaintenanceRequest) error
	Recv() (*MigrationResponse, error)
	grpc.ClientStream
}

type maintenanceMigrationServiceMigrationMaintenanceClient struct {
	grpc.ClientStream
}

func (x *maintenanceMigrationServiceMigrationMaintenanceClient) Send(m *MigrationMaintenanceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maintenanceMigrationServiceMigrationMaintenanceClient) Recv() (*MigrationResponse, error) {
	m := new(MigrationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaintenanceMigrationServiceServer is the server API for MaintenanceMigrationService service.
// All implementations must embed UnimplementedMaintenanceMigrationServiceServer
// for forward compatibility
type MaintenanceMigrationServiceServer interface {
	// 搬移維護資訊
	MigrationMaintenance(MaintenanceMigrationService_MigrationMaintenanceServer) error
	mustEmbedUnimplementedMaintenanceMigrationServiceServer()
}

// UnimplementedMaintenanceMigrationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMaintenanceMigrationServiceServer struct {
}

func (UnimplementedMaintenanceMigrationServiceServer) MigrationMaintenance(MaintenanceMigrationService_MigrationMaintenanceServer) error {
	return status.Errorf(codes.Unimplemented, "method MigrationMaintenance not implemented")
}
func (UnimplementedMaintenanceMigrationServiceServer) mustEmbedUnimplementedMaintenanceMigrationServiceServer() {
}

// UnsafeMaintenanceMigrationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MaintenanceMigrationServiceServer will
// result in compilation errors.
type UnsafeMaintenanceMigrationServiceServer interface {
	mustEmbedUnimplementedMaintenanceMigrationServiceServer()
}

func RegisterMaintenanceMigrationServiceServer(s grpc.ServiceRegistrar, srv MaintenanceMigrationServiceServer) {
	s.RegisterService(&MaintenanceMigrationService_ServiceDesc, srv)
}

func _MaintenanceMigrationService_MigrationMaintenance_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaintenanceMigrationServiceServer).MigrationMaintenance(&maintenanceMigrationServiceMigrationMaintenanceServer{stream})
}

type MaintenanceMigrationService_MigrationMaintenanceServer interface {
	Send(*MigrationResponse) error
	Recv() (*MigrationMaintenanceRequest, error)
	grpc.ServerStream
}

type maintenanceMigrationServiceMigrationMaintenanceServer struct {
	grpc.ServerStream
}

func (x *maintenanceMigrationServiceMigrationMaintenanceServer) Send(m *MigrationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maintenanceMigrationServiceMigrationMaintenanceServer) Recv() (*MigrationMaintenanceRequest, error) {
	m := new(MigrationMaintenanceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaintenanceMigrationService_ServiceDesc is the grpc.ServiceDesc for MaintenanceMigrationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MaintenanceMigrationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "maintenance.MaintenanceMigrationService",
	HandlerType: (*MaintenanceMigrationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MigrationMaintenance",
			Handler:       _MaintenanceMigrationService_MigrationMaintenance_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "maintenance/proto/maintenance_migration.proto",
}
