// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.2
// source: device/proto/device.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_Sensor     DataType = 0
	DataType_Controller DataType = 1
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "Sensor",
		1: "Controller",
	}
	DataType_value = map[string]int32{
		"Sensor":     0,
		"Controller": 1,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_device_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_device_proto_device_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{0}
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode uint32 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateRawdataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DataType `protobuf:"varint,1,opt,name=type,proto3,enum=device.DataType" json:"type,omitempty"`
	Data *Rawdata `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRawdataRequest) Reset() {
	*x = UpdateRawdataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRawdataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRawdataRequest) ProtoMessage() {}

func (x *UpdateRawdataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRawdataRequest.ProtoReflect.Descriptor instead.
func (*UpdateRawdataRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRawdataRequest) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_Sensor
}

func (x *UpdateRawdataRequest) GetData() *Rawdata {
	if x != nil {
		return x.Data
	}
	return nil
}

type Rawdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac          string                  `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	VirtualID    uint32                  `protobuf:"varint,2,opt,name=virtualID,proto3" json:"virtualID,omitempty"`
	Time         string                  `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Values       map[uint32]*SensorValue `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GwID         string                  `protobuf:"bytes,5,opt,name=gwID,proto3" json:"gwID,omitempty"`
	SendDuration uint32                  `protobuf:"varint,6,opt,name=sendDuration,proto3" json:"sendDuration,omitempty"`
}

func (x *Rawdata) Reset() {
	*x = Rawdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rawdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rawdata) ProtoMessage() {}

func (x *Rawdata) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rawdata.ProtoReflect.Descriptor instead.
func (*Rawdata) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{2}
}

func (x *Rawdata) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Rawdata) GetVirtualID() uint32 {
	if x != nil {
		return x.VirtualID
	}
	return 0
}

func (x *Rawdata) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Rawdata) GetValues() map[uint32]*SensorValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Rawdata) GetGwID() string {
	if x != nil {
		return x.GwID
	}
	return ""
}

func (x *Rawdata) GetSendDuration() uint32 {
	if x != nil {
		return x.SendDuration
	}
	return 0
}

type GetVirtualIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac  string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	GwID string `protobuf:"bytes,2,opt,name=gwID,proto3" json:"gwID,omitempty"`
}

func (x *GetVirtualIdRequest) Reset() {
	*x = GetVirtualIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualIdRequest) ProtoMessage() {}

func (x *GetVirtualIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualIdRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualIdRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{3}
}

func (x *GetVirtualIdRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *GetVirtualIdRequest) GetGwID() string {
	if x != nil {
		return x.GwID
	}
	return ""
}

type GetVirtualIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualID uint32 `protobuf:"varint,1,opt,name=virtualID,proto3" json:"virtualID,omitempty"`
}

func (x *GetVirtualIdResponse) Reset() {
	*x = GetVirtualIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualIdResponse) ProtoMessage() {}

func (x *GetVirtualIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualIdResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualIdResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{4}
}

func (x *GetVirtualIdResponse) GetVirtualID() uint32 {
	if x != nil {
		return x.VirtualID
	}
	return 0
}

type GetVirtualIdStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode uint32 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	VirtualID  uint32 `protobuf:"varint,3,opt,name=virtualID,proto3" json:"virtualID,omitempty"`
}

func (x *GetVirtualIdStreamResponse) Reset() {
	*x = GetVirtualIdStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualIdStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualIdStreamResponse) ProtoMessage() {}

func (x *GetVirtualIdStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualIdStreamResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualIdStreamResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{5}
}

func (x *GetVirtualIdStreamResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetVirtualIdStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetVirtualIdStreamResponse) GetVirtualID() uint32 {
	if x != nil {
		return x.VirtualID
	}
	return 0
}

type SensorValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Dp    uint32  `protobuf:"varint,2,opt,name=dp,proto3" json:"dp,omitempty"`
}

func (x *SensorValue) Reset() {
	*x = SensorValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorValue) ProtoMessage() {}

func (x *SensorValue) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorValue.ProtoReflect.Descriptor instead.
func (*SensorValue) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{6}
}

func (x *SensorValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SensorValue) GetDp() uint32 {
	if x != nil {
		return x.Dp
	}
	return 0
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac       string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	VirtualID uint32 `protobuf:"varint,2,opt,name=virtualID,proto3" json:"virtualID,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{7}
}

func (x *Device) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Device) GetVirtualID() uint32 {
	if x != nil {
		return x.VirtualID
	}
	return 0
}

type RemoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device   *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	DeviceNo uint32  `protobuf:"varint,2,opt,name=deviceNo,proto3" json:"deviceNo,omitempty"`
	Address  uint32  `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
	Value    float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RemoteRequest) Reset() {
	*x = RemoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRequest) ProtoMessage() {}

func (x *RemoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteRequest.ProtoReflect.Descriptor instead.
func (*RemoteRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{8}
}

func (x *RemoteRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *RemoteRequest) GetDeviceNo() uint32 {
	if x != nil {
		return x.DeviceNo
	}
	return 0
}

func (x *RemoteRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *RemoteRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type RemoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode  uint32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message     string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OriginValue float64 `protobuf:"fixed64,3,opt,name=originValue,proto3" json:"originValue,omitempty"`
}

func (x *RemoteResponse) Reset() {
	*x = RemoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteResponse) ProtoMessage() {}

func (x *RemoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteResponse.ProtoReflect.Descriptor instead.
func (*RemoteResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_device_proto_rawDescGZIP(), []int{9}
}

func (x *RemoteResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RemoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RemoteResponse) GetOriginValue() float64 {
	if x != nil {
		return x.OriginValue
	}
	return 0
}

var File_device_proto_device_proto protoreflect.FileDescriptor

var file_device_proto_device_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x02, 0x0a,
	0x07, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x77, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x77, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x4e, 0x0a, 0x0b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x77, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x77, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x74, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x44, 0x22, 0x33, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x70, 0x22, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x61, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49,
	0x44, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6c, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x26, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x10, 0x01, 0x32, 0xf9, 0x03,
	0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5b,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x72, 0x69, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x61, 0x77, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x72, 0x69, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x10, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_proto_device_proto_rawDescOnce sync.Once
	file_device_proto_device_proto_rawDescData = file_device_proto_device_proto_rawDesc
)

func file_device_proto_device_proto_rawDescGZIP() []byte {
	file_device_proto_device_proto_rawDescOnce.Do(func() {
		file_device_proto_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_proto_device_proto_rawDescData)
	})
	return file_device_proto_device_proto_rawDescData
}

var file_device_proto_device_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_device_proto_device_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_device_proto_device_proto_goTypes = []interface{}{
	(DataType)(0),                      // 0: device.DataType
	(*Response)(nil),                   // 1: device.Response
	(*UpdateRawdataRequest)(nil),       // 2: device.UpdateRawdataRequest
	(*Rawdata)(nil),                    // 3: device.Rawdata
	(*GetVirtualIdRequest)(nil),        // 4: device.GetVirtualIdRequest
	(*GetVirtualIdResponse)(nil),       // 5: device.GetVirtualIdResponse
	(*GetVirtualIdStreamResponse)(nil), // 6: device.GetVirtualIdStreamResponse
	(*SensorValue)(nil),                // 7: device.SensorValue
	(*Device)(nil),                     // 8: device.Device
	(*RemoteRequest)(nil),              // 9: device.RemoteRequest
	(*RemoteResponse)(nil),             // 10: device.RemoteResponse
	nil,                                // 11: device.Rawdata.ValuesEntry
}
var file_device_proto_device_proto_depIdxs = []int32{
	0,  // 0: device.UpdateRawdataRequest.type:type_name -> device.DataType
	3,  // 1: device.UpdateRawdataRequest.data:type_name -> device.Rawdata
	11, // 2: device.Rawdata.values:type_name -> device.Rawdata.ValuesEntry
	8,  // 3: device.RemoteRequest.device:type_name -> device.Device
	7,  // 4: device.Rawdata.ValuesEntry.value:type_name -> device.SensorValue
	2,  // 5: device.DeviceService.UpdateRawdata:input_type -> device.UpdateRawdataRequest
	2,  // 6: device.DeviceService.UpdateRealtime:input_type -> device.UpdateRawdataRequest
	4,  // 7: device.DeviceService.GetVritualIdStream:input_type -> device.GetVirtualIdRequest
	2,  // 8: device.DeviceService.BackupRawdata:input_type -> device.UpdateRawdataRequest
	4,  // 9: device.DeviceService.GetVritualId:input_type -> device.GetVirtualIdRequest
	8,  // 10: device.DeviceService.SetTime:input_type -> device.Device
	9,  // 11: device.DeviceService.Remote:input_type -> device.RemoteRequest
	1,  // 12: device.DeviceService.UpdateRawdata:output_type -> device.Response
	1,  // 13: device.DeviceService.UpdateRealtime:output_type -> device.Response
	6,  // 14: device.DeviceService.GetVritualIdStream:output_type -> device.GetVirtualIdStreamResponse
	1,  // 15: device.DeviceService.BackupRawdata:output_type -> device.Response
	5,  // 16: device.DeviceService.GetVritualId:output_type -> device.GetVirtualIdResponse
	1,  // 17: device.DeviceService.SetTime:output_type -> device.Response
	10, // 18: device.DeviceService.Remote:output_type -> device.RemoteResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_device_proto_device_proto_init() }
func file_device_proto_device_proto_init() {
	if File_device_proto_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_proto_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRawdataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rawdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualIdStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_proto_device_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_device_proto_device_proto_goTypes,
		DependencyIndexes: file_device_proto_device_proto_depIdxs,
		EnumInfos:         file_device_proto_device_proto_enumTypes,
		MessageInfos:      file_device_proto_device_proto_msgTypes,
	}.Build()
	File_device_proto_device_proto = out.File
	file_device_proto_device_proto_rawDesc = nil
	file_device_proto_device_proto_goTypes = nil
	file_device_proto_device_proto_depIdxs = nil
}
